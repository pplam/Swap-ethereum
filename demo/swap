#!/usr/bin/env node

const fs = require('fs')
const Web3 = require('web3')
const config = require('./config')

const args = process.argv[2]
if (!args) usageAndExit()

const [
  toChain,
  toAddress,
  amount,
  gas
] = args.split(',')

if (!amount) usageAndExit()

const data = string2bytes32(toChain) + toAddress.substring(2)

const atnAbiFile = '../out/ATN.abi'
const atnAbiJson = fs.readFileSync(atnAbiFile)
const atnAbi = JSON.parse(atnAbiJson)

// const swapAbiFile = '../out/Swap.abi'
// const swapAbiJson = fs.readFileSync(swapAbiFile)
// const swapAbi = JSON.parse(swapAbiJson)
//
const provider = new Web3.providers.HttpProvider(config.endpoint)
const web3 = new Web3(provider)

const atn = web3.eth.contract(atnAbi).at(config.ATN)
// const atn = new web3.eth.Contract(atnAbi, config.ATN, {
//   from,
//   gas: gas || 470000
// })
// const swap = web3.eth.contract(swapAbi).at(config.SWAP)
// console.log(from, data, amount)

atn.transfer['address,uint256,bytes'](config.SWAP, amount, data, {
  from: config.from,
  gas: gas || 470000
}, (err, res) => {
  if (err) console.log(err)
  console.log(res)
    // swap.events.allEvents(console.log)
  })
// atn.methods.transfer(config.SWAP, amount, data)
//   .send({from, gas: 470000}).then((res) => {
//     console.log(res)
//     // swap.events.allEvents(console.log)
//   })


function string2bytes32(str) {
  const hex = Buffer.from(str).toString('hex')
  const pad = Array(65 - hex.length).join('0')
  return `0x${pad}${hex}`
}

function usageAndExit() {
  console.log("Usage:\n\tswap '<toChain>,<toAddress>,<amount>[,gas]'")
  process.exit(1)
}
